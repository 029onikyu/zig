this is my WIP branch scratch pad, to be deleted before merging into master

Merge TODO list:
 * fix discrepancy between TZIR wanting src: usize (byte offset) and Sema
   now providing LazySrcLoc
 * fix compile errors
 * don't have an explicit dbg_stmt zir instruction - instead merge it with
   var decl and assignment instructions, etc.
   - make it set sema.src where appropriate
 * remove the LazySrcLoc.todo tag
 * update astgen.zig
 * finish updating Sema.zig
 * finish implementing SrcLoc byteOffset function
 * audit Module.zig for use of token_starts - it should only be when
   resolving LazySrcLoc
 * audit all the .unneeded src locations
 * audit the calls in codegen toSrcLocWithDecl specifically if there is inlined function
   calls from other files.


Performance optimizations to look into:
 * don't store end index for blocks; rely on last instruction being noreturn
 * introduce special form for function call statement with 0 or 1 parameters
 * look into not storing the field name of field access as a string in zir
   instructions. or, look into introducing interning to string_bytes (local
   to the owner Decl), or, look into allowing field access based on a token/node
   and have it reference source code bytes. Another idea: null terminated
   string variants which avoid having to store the length.
   - Look into this for enum literals too
 * make ret_type and ret_ptr instructions be implied indexes; no need to have
   tags associated with them.


Random snippets of code that I deleted and need to make sure get
re-integrated appropriately:



    /// Each Decl gets its own string interning, in order to avoid contention when
    /// using multiple threads to analyze Decls in parallel. Any particular Decl will only
    /// be touched by a single thread at one time.
    strings: StringTable = .{},

    /// The string memory referenced here is stored inside the Decl's arena.
    pub const StringTable = std.StringArrayHashMapUnmanaged(void);



