 * struct types as the return type of an async function. make sure it works with return result locations.
 * compile error for error: expected anyframe->T, found 'anyframe'
 * compile error for error: expected anyframe->T, found 'i32'
 * await of a non async function
 * await in single-threaded mode
 * async call on a non async function
 * @asyncCall with an async function pointer
 * cancel
 * defer and errdefer
 * safety for resuming when it is awaiting
 * safety for double await
 * implicit cast of normal function to async function should be allowed when it is inferred to be async
 * go over the commented out tests
 * revive std.event.Loop
 * @typeInfo for @Frame(func)
 * peer type resolution of *@Frame(func) and anyframe
 * peer type resolution of *@Frame(func) and anyframe->T when the return type matches
 * returning a value from within a suspend block
 * make resuming inside a suspend block, with nothing after it, a must-tail call.
 * make sure there are safety tests for all the new safety features (search the new PanicFnId enum values)
 * error return tracing
