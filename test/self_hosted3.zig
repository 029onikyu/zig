// TODO '_' identifier for unused variable bindings
const test_array = @import("cases3/array.zig");
const test_atomics = @import("cases3/atomics.zig");
const test_bool = @import("cases3/bool.zig");
const test_cast= @import("cases3/cast.zig");
const test_const_slice_child = @import("cases3/const_slice_child.zig");
const test_defer = @import("cases3/defer.zig");
const test_enum = @import("cases3/enum.zig");
const test_enum_with_members = @import("cases3/enum_with_members.zig");
const test_error = @import("cases3/error.zig");
const test_eval = @import("cases3/eval.zig");
const test_fn = @import("cases3/fn.zig");
const test_for = @import("cases3/for.zig");
const test_generics = @import("cases3/generics.zig");
const test_goto = @import("cases3/goto.zig");
const test_if = @import("cases3/if.zig");
const test_import = @import("cases3/import.zig");
const test_math = @import("cases3/math.zig");
const test_misc = @import("cases3/misc.zig");
const test_null = @import("cases3/null.zig");
const test_sizeof_and_typeof = @import("cases3/sizeof_and_typeof.zig");
const test_struct = @import("cases3/struct.zig");
const test_struct_contains_slice_of_itself = @import("cases3/struct_contains_slice_of_itself.zig");
const test_switch = @import("cases3/switch.zig");
const test_switch_prong_err_enum = @import("cases3/switch_prong_err_enum.zig");
const test_switch_prong_implicit_cast = @import("cases3/switch_prong_implicit_cast.zig");
const test_this = @import("cases3/this.zig");
const test_while = @import("cases3/while.zig");
